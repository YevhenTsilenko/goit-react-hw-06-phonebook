{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Button/Button.module.css","redux/actions.js","components/Button/Button.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.js","reportWebVitals.js","redux/redusers.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortId","generate","deleteContact","filterContacts","Button","type","onClick","btnName","disabled","className","styles","button","connect","dispatch","onSubmit","useState","setName","setNumber","reset","e","preventDefault","form","label","form_input","pattern","title","required","value","onChange","currentTarget","form_btn","state","contacts","filter","evt","target","input","getFilteredContacts","allContacts","lowerCasedFilter","toLocaleLowerCase","trim","contact","includes","items","onDelete","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createReducer","some","alert","_","combineReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","persistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.6737c754.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__33Ibq\",\"input\":\"Filter_input__2Qxyb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactList_contact__f7ZWF\",\"button\":\"ContactList_button__1b5R0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__14vhO\"};","import { createAction } from '@reduxjs/toolkit'\r\nimport shortId from 'shortid';\r\n\r\nconst addContact = createAction('add', (name, number) => ({\r\n  payload: {\r\n      id: shortId.generate(),\r\n      name,\r\n      number,\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction('delete');\r\n\r\nconst filterContacts = createAction('filter');\r\n\r\nexport { addContact,  deleteContact, filterContacts };\r\n\r\n\r\n// const addContact = (name, number) => ({\r\n//       type: ADD,\r\n//       payload: {\r\n//         id: shortId.generate(),\r\n//         name,\r\n//         number,\r\n//       },\r\n//     });\r\n    \r\n// const deleteContact = id => ({\r\n//   type: DELETE,\r\n//   payload: id,\r\n// });\r\n    \r\n// const filter = value => ({\r\n//   type: FILTER,\r\n//   payload: value,\r\n// });\r\n\r\n","import styles from './Button.module.css';\r\n\r\nfunction Button({ type, onClick, btnName, disabled }) {\r\n    return (\r\n      <button\r\n        type={type}\r\n        className={styles.button}\r\n        onClick={onClick}\r\n        disabled={disabled}\r\n      >\r\n        {btnName}\r\n      </button>\r\n    );\r\n  }\r\n  \r\n  export { Button };","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addContact } from '../../redux/actions';\r\nimport { Button } from '../Button/Button';\r\nimport styles from './ContactForm.module.css';\r\n\r\nfunction ContactForm({ onSubmit }) {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('')\r\n\r\n    const hendleSubmit = (e) => {\r\n        e.preventDefault();\r\n        onSubmit(name, number);\r\n        reset();\r\n    };\r\n    \r\n    const reset = () => {\r\n        setName(\"\");\r\n        setNumber(\"\");\r\n    };\r\n        return (\r\n            <form onSubmit={hendleSubmit} className={styles.form}>\r\n                <label className={styles.label}>\r\n                  Name\r\n                    <input \r\n                        className={styles.form_input}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                        value={name}\r\n                        onChange={(e) => {\r\n                            setName(e.currentTarget.value);\r\n                        }}/>\r\n                </label>\r\n                <label className={styles.label}>\r\n                  Number\r\n                    <input \r\n                        className={styles.form_input}\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                        value={number}\r\n                        onChange={(e) => {\r\n                            setNumber(e.currentTarget.value);\r\n                        }}/>\r\n                </label>\r\n                <Button type=\"submit\" btnName=\"Add contact\" disabled={!(name && number)} className={styles.form_btn}/>\r\n            </form>\r\n        )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onSubmit: (name, number) => dispatch(addContact(name, number)),\r\n});\r\n\r\nContactForm.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);","import { connect } from 'react-redux';\r\nimport { filterContacts } from '../../redux/actions';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\n\r\nfunction Filter({ value, onChange }) {\r\n    return (\r\n        <label className={styles.label}>\r\n            Find contacts by name\r\n                <input type=\"text\" value={value} onChange={onChange} className={styles.input}/>\r\n        </label>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onChange: evt => dispatch(filterContacts(evt.target.value)),\r\n});\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import { connect } from 'react-redux';\r\nimport { deleteContact } from '../../redux/actions';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactList.module.css';\r\n\r\nfunction ContactList ({ contacts, onDelete }) {\r\n    return (\r\n        <ul >\r\n        {contacts.map(({ id, name, number }) => (\r\n          <li key={id} className={styles.contact}>\r\n            <span>\r\n              {name}: {number}\r\n            </span>\r\n            <button\r\n              className={styles.button}\r\n              type=\"button\"\r\n              onClick={() => onDelete(id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    )\r\n}\r\n\r\nconst getFilteredContacts = (allContacts, filter) => {\r\n  const lowerCasedFilter = filter.toLocaleLowerCase().trim();\r\n  return allContacts.filter(contact => contact.name.toLocaleLowerCase().includes(lowerCasedFilter))\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n  contacts: getFilteredContacts(items, filter)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n      onDelete: id => dispatch(deleteContact(id)),\r\n});\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n  \r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\nimport './App.css';\n\nfunction App() {\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <ContactForm />\n\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { addContact,  deleteContact, filterContacts } from './actions';\r\n\r\nconst items = createReducer(\r\n  [\r\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n  ],\r\n  {\r\n    [addContact]: (state, { payload }) => {\r\n      if (state.some(({ name }) => name === payload.name)) {\r\n        alert(`${payload.name} is already exists`);\r\n        return [...state];\r\n      }     \r\n      return [...state, payload]\r\n    },\r\n    [deleteContact]: (state, { payload }) =>\r\n      state.filter(contact => contact.id !== payload),\r\n  },\r\n);\r\n\r\nconst filter = createReducer('', {\r\n  [filterContacts]: (_, { payload }) => payload,\r\n});\r\n\r\nconst combineReducer = combineReducers({\r\n  items,\r\n  filter,\r\n})\r\n\r\n// const INITIAL_STATE = {\r\n//   contacts: {\r\n//     items: [\r\n      //   { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      //   { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      //   { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      //   { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n      // ],\r\n//     filter: '',\r\n//   }\r\n// }\r\n\r\n// const filterReducer = (state = INITIAL_STATE.contacts, { type, payload }) => {\r\n//   switch (type) {\r\n//     case FILTER:\r\n//       return {\r\n//         ...state,\r\n//         filter: payload,\r\n//       };\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const contactsReducer = (state = INITIAL_STATE.contacts, { type, payload }) => {\r\n//   switch (type) {\r\n//     case ADD:\r\n//       if (state.items.some(({ name }) => name === payload.name)) {\r\n//         alert(`${payload.name} is already exists`);\r\n//         return {...state};\r\n//       }\r\n//       return {\r\n//         ...state, \r\n//         items: [...state.items, payload]\r\n//       };\r\n\r\n//     case DELETE:\r\n//       const itemsAfterDeleteContact = state.items.filter(({ id }) => id !== payload);\r\n//       return {\r\n//         ...state,\r\n//         items: itemsAfterDeleteContact,\r\n//       }\r\n       \r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const combineReducer = combineReducers({\r\n//   contacts: contactsReducer,\r\n//   filter: filterReducer,\r\n// })\r\n\r\nexport { combineReducer }","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport { \r\n    persistStore, \r\n    persistReducer, \r\n    FLUSH, \r\n    REHYDRATE, \r\n    PAUSE, \r\n    PERSIST, \r\n    PURGE, \r\n    REGISTER \r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport logger from 'redux-logger'\r\nimport { combineReducer } from \"./redusers\";\r\n\r\nconst middleware = [...getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n         },\r\n    }), \r\n    logger,\r\n];\r\n\r\nconst persistConfig = {\r\n    key: 'items',\r\n    storage,\r\n    blacklist: ['filter'],\r\n};\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        contacts: persistReducer(persistConfig, combineReducer),\r\n    },\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n       <App />\n    </PersistGate>\n      </Provider>  \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2CQ4y\",\"label\":\"ContactForm_label__3-rH2\",\"form_input\":\"ContactForm_form_input__3WJ3m\"};"],"sourceRoot":""}